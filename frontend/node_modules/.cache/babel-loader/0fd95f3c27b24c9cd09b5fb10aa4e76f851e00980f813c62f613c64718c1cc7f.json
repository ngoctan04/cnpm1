{"ast":null,"code":"var _jsxFileName = \"/home/diengb/hotel/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authApi, getErrorMessage } from '../utils/api';\nimport toast from 'react-hot-toast';\n\n// Create auth context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Auth provider props\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is authenticated\n  const isAuthenticated = !!user && !!token;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        const storedUser = localStorage.getItem('user');\n        if (storedToken && storedUser) {\n          setToken(storedToken);\n          try {\n            // Verify token is still valid by fetching user profile\n            const currentUser = await authApi.getProfile();\n            setUser(currentUser);\n            // Update stored user data\n            localStorage.setItem('user', JSON.stringify(currentUser));\n          } catch (error) {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            setToken(null);\n            setUser(null);\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n\n  // Direct login with user and token\n  const login = (user, token) => {\n    setUser(user);\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n\n  // Login function with credentials\n  const loginWithCredentials = async credentials => {\n    try {\n      setIsLoading(true);\n\n      // Get token from API\n      const tokenResponse = await authApi.login(credentials);\n\n      // Store token\n      setToken(tokenResponse.access_token);\n      localStorage.setItem('token', tokenResponse.access_token);\n\n      // Get user profile\n      const userProfile = await authApi.getProfile();\n      setUser(userProfile);\n      localStorage.setItem('user', JSON.stringify(userProfile));\n      toast.success(`Welcome back, ${userProfile.first_name}!`);\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Login failed: ${errorMessage}`);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setIsLoading(true);\n\n      // Create user\n      const newUser = await authApi.register(userData);\n\n      // Auto-login after successful registration\n      await loginWithCredentials({\n        username: userData.username,\n        password: userData.password\n      });\n      toast.success(`Welcome, ${newUser.first_name}! Your account has been created.`);\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Registration failed: ${errorMessage}`);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const updatedUser = await authApi.updateProfile(userData);\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Profile update failed: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    login,\n    loginWithCredentials,\n    register,\n    logout,\n    isLoading,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Higher-order component for protected routes\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const withAuth = Component => {\n  var _s3 = $RefreshSig$();\n  const AuthenticatedComponent = props => {\n    _s3();\n    const {\n      isAuthenticated,\n      isLoading\n    } = useAuth();\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center min-h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center min-h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-gray-900 mb-4\",\n            children: \"Authentication Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-4\",\n            children: \"You need to be logged in to access this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            className: \"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200\",\n            children: \"Go to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 12\n    }, this);\n  };\n  _s3(AuthenticatedComponent, \"yb/FJYAIXt7wZoU4a4YvGQ4Nlsc=\", false, function () {\n    return [useAuth];\n  });\n  return AuthenticatedComponent;\n};\n\n// Hook for admin-only access\nexport const useAdminAuth = () => {\n  _s4();\n  var _auth$user;\n  const auth = useAuth();\n  if (!auth.isAuthenticated) {\n    throw new Error('User is not authenticated');\n  }\n  if (((_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.role) !== 'admin') {\n    throw new Error('Admin access required');\n  }\n  return auth;\n};\n\n// Export context for direct usage if needed\n_s4(useAdminAuth, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authApi","getErrorMessage","toast","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","isLoading","setIsLoading","isAuthenticated","initAuth","storedToken","localStorage","getItem","storedUser","currentUser","getProfile","setItem","JSON","stringify","error","removeItem","console","login","loginWithCredentials","credentials","tokenResponse","access_token","userProfile","success","first_name","errorMessage","register","userData","newUser","username","password","logout","updateProfile","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","withAuth","Component","_s3","$RefreshSig$","AuthenticatedComponent","props","className","href","useAdminAuth","_s4","_auth$user","auth","role","$RefreshReg$"],"sources":["/home/diengb/hotel/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, UserLogin, UserCreate, Token, AuthContextType } from '../types';\nimport { authApi, getErrorMessage } from '../utils/api';\nimport toast from 'react-hot-toast';\n\n// Create auth context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Auth provider props\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Auth provider component\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Check if user is authenticated\n  const isAuthenticated = !!user && !!token;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        const storedUser = localStorage.getItem('user');\n\n        if (storedToken && storedUser) {\n          setToken(storedToken);\n          try {\n            // Verify token is still valid by fetching user profile\n            const currentUser = await authApi.getProfile();\n            setUser(currentUser);\n            // Update stored user data\n            localStorage.setItem('user', JSON.stringify(currentUser));\n          } catch (error) {\n            // Token is invalid, clear storage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            setToken(null);\n            setUser(null);\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  // Direct login with user and token\n  const login = (user: User, token: string): void => {\n    setUser(user);\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n\n  // Login function with credentials\n  const loginWithCredentials = async (credentials: UserLogin): Promise<void> => {\n    try {\n      setIsLoading(true);\n      \n      // Get token from API\n      const tokenResponse: Token = await authApi.login(credentials);\n      \n      // Store token\n      setToken(tokenResponse.access_token);\n      localStorage.setItem('token', tokenResponse.access_token);\n      \n      // Get user profile\n      const userProfile = await authApi.getProfile();\n      setUser(userProfile);\n      localStorage.setItem('user', JSON.stringify(userProfile));\n      \n      toast.success(`Welcome back, ${userProfile.first_name}!`);\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Login failed: ${errorMessage}`);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (userData: UserCreate): Promise<void> => {\n    try {\n      setIsLoading(true);\n      \n      // Create user\n      const newUser = await authApi.register(userData);\n      \n      // Auto-login after successful registration\n      await loginWithCredentials({\n        username: userData.username,\n        password: userData.password,\n      });\n      \n      toast.success(`Welcome, ${newUser.first_name}! Your account has been created.`);\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Registration failed: ${errorMessage}`);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = (): void => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async (userData: Partial<User>): Promise<void> => {\n    try {\n      const updatedUser = await authApi.updateProfile(userData);\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      const errorMessage = getErrorMessage(error);\n      toast.error(`Profile update failed: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  // Context value\n  const value: AuthContextType = {\n    user,\n    token,\n    login,\n    loginWithCredentials,\n    register,\n    logout,\n    isLoading,\n    isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Higher-order component for protected routes\nexport const withAuth = <P extends object>(\n  Component: React.ComponentType<P>\n): React.FC<P> => {\n  const AuthenticatedComponent: React.FC<P> = (props) => {\n    const { isAuthenticated, isLoading } = useAuth();\n\n    if (isLoading) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      );\n    }\n\n    if (!isAuthenticated) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              Authentication Required\n            </h2>\n            <p className=\"text-gray-600 mb-4\">\n              You need to be logged in to access this page.\n            </p>\n            <a\n              href=\"/login\"\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-200\"\n            >\n              Go to Login\n            </a>\n          </div>\n        </div>\n      );\n    }\n\n    return <Component {...props} />;\n  };\n\n  return AuthenticatedComponent;\n};\n\n// Hook for admin-only access\nexport const useAdminAuth = (): AuthContextType => {\n  const auth = useAuth();\n  \n  if (!auth.isAuthenticated) {\n    throw new Error('User is not authenticated');\n  }\n  \n  if (auth.user?.role !== 'admin') {\n    throw new Error('Admin access required');\n  }\n  \n  return auth;\n};\n\n// Export context for direct usage if needed\nexport { AuthContext }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}